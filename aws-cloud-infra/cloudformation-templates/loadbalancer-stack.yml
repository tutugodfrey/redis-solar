AWSTemplateFormatVersion: 2010-09-09
Description: Provision and Manage Application Load Balancer for Redis Solar
Parameters:
  ProjectName:
    Description: Project context stack to which stack is been used
    Type: String
    Default: RediSolar
  EnvironmentName:
    Description: Environment context to which stack is been applied
    Type: String
    Default: Dev
    AllowedValues:
    - Dev
    - Test
    - Prod
  WorkflowId:
    Description: >
     An ID to uniquely Identifier the resource
     created each time the stack is run
    Type: String
    Default: eee56529-211a-4066-9b2a-a9509536533a

Resources:
  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: application
      Scheme: internet-facing
      Subnets:
      - Fn::ImportValue: !Sub ${ProjectName}-${EnvironmentName}-PUB-SN-A
      - Fn::ImportValue: !Sub ${ProjectName}-${EnvironmentName}-PUB-SN-B
      SecurityGroups:
      - Fn::ImportValue: !Sub ${ProjectName}-${EnvironmentName}-LBSecGroup
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName
        - Key: Project
          Value: !Ref ProjectName
  
  # Listeners:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     DefaultActions:
  #     - Type: forward
  #       TargetGroupArn:
  #         Ref: WebAppTargetGroup
  #     LoadBalancerArn:
  #       Ref: WebAppLB
  #     Port: 80
  #     Protocol: HTTP

  # ALBListenerRule:
  #   Type: AWS::ElasticLoadBalancingV2::ListenerRule
  #   Properties:
  #     Actions:
  #     - Type: forward
  #       TargetGroupArn: !Ref WebAppTargetGroup
  #     Conditions:
  #     - Field: path-pattern
  #       Values: [/]
  #     ListenerArn: !Ref Listeners
  #     Priority: 1
  
  # WebAppTargetGroup:
  #   Type: AWS::ElasticLoadBalancingV2::TargetGroup
  #   Properties:
  #     HealthCheckIntervalSeconds: 10
  #     HealthCheckPath: /
  #     HealthCheckProtocol: HTTP
  #     HealthCheckTimeoutSeconds: 8
  #     HealthyThresholdCount: 2
  #     Port: 80
  #     Protocol: HTTP
  #     UnhealthyThresholdCount: 10
  #     VpcId:
  #       Fn::ImportValue:
  #         Fn::Sub: ${ProjectName}-${EnvironmentName}-VPCID

  APPListeners:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: BackendAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: 80
      Protocol: HTTP

  APPALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref BackendAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref APPListeners
      Priority: 1

  BackendAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 8081
      Protocol: HTTP
      UnhealthyThresholdCount: 10
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${ProjectName}-${EnvironmentName}-VPCID
  
Outputs:
  LoadBalancerID:
    Description: ID or ARN of the Load Balancer
    Value: !Ref WebAppLB
    Export:
      Name: !Sub ${ProjectName}-${EnvironmentName}-${WorkflowId}-WebAppLB
  
  LoadBalancerDNS:
    Description: DNS of the Load Balancer
    Value: !GetAtt WebAppLB.DNSName
    Export:
      Name: !Sub ${ProjectName}-${EnvironmentName}-${WorkflowId}-WeBAppLB-DNS
  
  LoadBalancerName:
    Description: Return the Name of Load Balancer
    Value: !GetAtt WebAppLB.LoadBalancerName
    Export: 
      Name: !Sub ${ProjectName}-${EnvironmentName}-LoadBalancerName

  BackendAppTargetGroupARNs:
    Description: ARN of the backend target
    Value: !Ref BackendAppTargetGroup
    Export:
      Name: !Sub ${ProjectName}-${EnvironmentName}-${WorkflowId}-BackendAppTargetGroupARN
