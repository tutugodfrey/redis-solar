AWSTemplateFormatVersion: 2010-09-09
Description: Provision and Manage Application Load Balancer for Redis Solar
Parameters:
  ProjectName:
    Description: Project context stack to which stack is been used
    Type: String
  EnvironmentName:
    Description: Environment context to which stack is been applied
    Type: String
  PublicCIDR:
    Description: Public Cidr Range
    Type: String
    Default: 0.0.0.0/0
Resources:
  LBSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load Balancer SG
      GroupName: !Sub ${ProjectName}-${EnvironmentName}-LoadBalancer
      VpcId:
        Fn::ImportValue:
          !Sub ${ProjectName}-${EnvironmentName}-VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref PublicCIDR
      - IpProtocol: tcp
        FromPort: 443
        ToPort: 443
        CidrIp: !Ref PublicCIDR
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: !Ref PublicCIDR
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-${EnvironmentName}-LoadBalancer SG

  WebAppLB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub ${ProjectName}-${EnvironmentName}-PUB-SN-A
      - Fn::ImportValue: !Sub ${ProjectName}-${EnvironmentName}-PUB-SN-B
      SecurityGroups:
      - Ref: LBSecGroup
  
  Listeners:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WebAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: 80
      Protocol: HTTP

  ALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref WebAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/]
      ListenerArn: !Ref Listeners
      Priority: 1
  
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 10
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${ProjectName}-${EnvironmentName}-VPCID

  APPListeners:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: BackendAppTargetGroup
      LoadBalancerArn:
        Ref: WebAppLB
      Port: 8081
      Protocol: HTTP

  APPALBListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
      - Type: forward
        TargetGroupArn: !Ref BackendAppTargetGroup
      Conditions:
      - Field: path-pattern
        Values: [/api]
      ListenerArn: !Ref APPListeners
      Priority: 3

  BackendAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /api
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 8081
      Protocol: HTTP
      UnhealthyThresholdCount: 10
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${ProjectName}-${EnvironmentName}-VPCID
  
Outputs:
  LBSecGroup:
    Description: SG of the Load Balancer
    Value: !Ref LBSecGroup
    Export:
      Name: !Sub ${ProjectName}-${EnvironmentName}-LoadBalancer-SG

  LoadBalancerID:
    Description: ID or ARN of the Load Balancer
    Value: !Ref WebAppLB
    Export:
      Name: !Sub ${ProjectName}-${EnvironmentName}-WebAppLB
  
  LoadBalancerDNS:
    Description: DNS of the Load Balancer
    Value: !GetAtt WebAppLB.DNSName
    Export:
      Name: !Sub ${ProjectName}-${EnvironmentName}-WeBAppLB-DNS
  
  TargetGroupARNs:
    Description: ARN of web target group
    Value: !Ref WebAppTargetGroup
    Export: 
      Name: !Sub ${ProjectName}-${EnvironmentName}-WebAppTargetGroupARN

  BackendAppTargetGroupARNs:
    Description: ARN of the backend target
    Value: !Ref BackendAppTargetGroup
    Export:
      Name: !Sub ${ProjectName}-${EnvironmentName}-BackendAppTargetGroupARN
